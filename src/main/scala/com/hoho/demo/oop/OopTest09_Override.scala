package com.hoho.demo.oop

object OopTest09_Override {
  def main(args: Array[String]): Unit = {
    /**
     * TODO 方法的重写
     * 1. 应该存在父子类关系
     * 2. 不适用在子类的场合，所以需要改变父类的功能实现。
     * 3. 方法名相同，参数列表相同，异常不能超出父类的范围（总的异常范围）
     *  子类重写方法的权限不能低于父类的方法
     * 4. 重写方法后，干类的方法可以代智父类方法使用
     *
     * 方法的重写其实就是在同一个内存区域中存在两个一样的方法，该如何区分的问题？
     * JVM在调用对象的成员方法时，会遵循动态绑定机制：
     * 所谓的动态绑定机制，就是在方法运行时，将方法和当前运行对象的实际内存进行绑定。
     * 然后调用。
     */
  }
}


